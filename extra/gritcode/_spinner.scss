 /*!
 *
 * Spinner
 *
 * Inspired by Semantic UI loader
 * http://github.com/semantic-org/semantic-ui/
 *
 */

// Variables
// --------------------------------------------------

// brand-primary is a default colour of the spinner
$spinner-color: $brand-primary !default;
$circle-bg: rgba(0, 0, 0, 0.1) !default;
$overlay-bg: rgba(255,255,255,0.8) !default;

// Mixins
// --------------------------------------------------
@mixin spinner-variant-inline($circle-color, $circle-bg: $circle-bg){
    &:before {
        border: 0.2em solid $circle-bg;
    }
    &:after {
        border-color: $circle-color transparent transparent;
    }
}
@mixin spinner-variant($circle-color, $circle-bg: $circle-bg){
    .text-center {
        color: $circle-color;
    }
    .spinner {
        @include spinner-variant-inline($circle-color, $circle-bg);
    }
}

// Standard Size
// --------------------------------------------------
.spinner-gritcode {
    text-align: center;
    position: relative;
    margin: auto;
    display: inline-block;
    vertical-align: middle;
    &:before, &:after {
        position: absolute;
        content: '';
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: 500rem;
        border: 0.2em solid $circle-bg
    }
        /* Active Shape */
    &:after {
        animation: spin 0.6s linear;
        animation-iteration-count: infinite;
        border-radius: 500rem;
        border-color: $spinner-color transparent transparent;
        border-style: solid;
        border-width: 0.2em;
        box-shadow: 0px 0px 0px 1px transparent;
    }
}

// Shapes
// --------------------------------------------------
.spinner-gritcode {
    &.spinner-sm {
        width: 1.2857em;
        height: 1.2857em;
    }
    &.spinner-md {
        width: 1.7142em;
        height: 1.7142em;
    }
    &.spinner-lg {
        width: 2.2585em;
        height: 2.2585em;
    }
    &.spinner-xl {
        width: 4.5714em;
        height: 4.5714em;
    }
}

// spinner wrapper with overlay
.spinner-gritcode-wrapper {
    height: 100%;
    width: 100%;
    z-index: 9998;
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    &.spinner-fixed {
        position: fixed;
    }
    .overlay{
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        background-color: rgba(255,255,255,0.8);
        height: 100%;
        width: 100%;
        z-index: 9999;
	}
    .spinner {
        display: block;
    }
    .text-center {
        z-index: 9999;
        text-align: center;
        color: $spinner-color;
    }
}

// Variants for main application spinner
// --------------------------------------------------
.spinner-gritcode-wrapper {
    &.spinner-inverted {
        @include spinner-variant(#fff, $spinner-color);
        .overlay {
            background-color: rgba(0,0,0,0.7);
        }
    }
    &.spinner-primary {
        @include spinner-variant($brand-primary);
    }
    &.spinner-info {
        @include spinner-variant($brand-info);
    }
    &.spinner-success {
        @include spinner-variant($brand-success);
    }
    &.spinner-warning {
        @include spinner-variant($brand-warning);
    }
    &.spinner-danger {
        @include spinner-variant($brand-danger);
    }
}

// Variants for inline spinner
// --------------------------------------------------
.spinner-gritcode {
    &.spinner-primary {
        @include spinner-variant-inline($brand-primary);
    }
    &.spinner-info {
        @include spinner-variant-inline($brand-info);
    }
    &.spinner-success {
        @include spinner-variant-inline($brand-success);
    }
    &.spinner-warning {
        @include spinner-variant-inline($brand-warning);
    }
    &.spinner-danger {
        @include spinner-variant-inline($brand-danger);
    }
}

// States
// --------------------------------------------------
.spinner-gritcode-wrapper {
    &.disabled {
        display: none;
    }
}

// Active Animation
// --------------------------------------------------
@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}
